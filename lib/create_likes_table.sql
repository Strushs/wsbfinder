-- Create the likes table to track individual like actions
CREATE TABLE likes (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    liker_user_id UUID NOT NULL REFERENCES public.students(user_id) ON DELETE CASCADE,
    liked_user_id UUID NOT NULL REFERENCES public.students(user_id) ON DELETE CASCADE,
    created_at TIMESTAMPTZ DEFAULT timezone('utc'::text, now()) NOT NULL,
    UNIQUE (liker_user_id, liked_user_id) -- Prevent duplicate likes from the same user to the same user
);

-- Optional: Add comments
COMMENT ON TABLE public.likes IS 'Records when one user likes another user.';
COMMENT ON COLUMN public.likes.liker_user_id IS 'The user ID of the person performing the like action.';
COMMENT ON COLUMN public.likes.liked_user_id IS 'The user ID of the person being liked.';

-- Optional: Index for faster lookups when checking for mutual likes
CREATE INDEX idx_likes_liked_liker ON public.likes (liked_user_id, liker_user_id);
